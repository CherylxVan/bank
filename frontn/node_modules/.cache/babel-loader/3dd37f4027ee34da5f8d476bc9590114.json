{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      // 校验数据是否合法\n      ruleLogin: {\n        username: [{\n          required: true,\n          message: '请输入登录名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 6,\n          message: '长度在 2 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    // 重置方法\n    reset: function () {\n      this.$refs.formRef.resetFields();\n    },\n    // 表单提交预验证\n    login: function () {\n      /*\n      this.$refs.formRef.validate(async val => {\n        // 预验证失败阻止程序向下执行\n        if (!val) return;\n        // 预验证通过发送请求\n        let { data: res } = await this.$http.post('login', this.form);\n        if (res.meta.status !== 200) return this.$message.error(\"登录失败\");\n        this.$message.success(\"登录成功\");\n        // 保存登录成功的token\n        window.sessionStorage.setItem(\"token\", res.data.token);\n        // 跳转到home页面\n        this.$router.push(\"/home\")\n      })\n      },*/\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;EACAA;IACA;MACAC;QACAC,YADA;QAEAC;MAFA,CADA;MAKA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MALA;IANA;EAiBA,CAnBA;;EAoBAG;IACA;IACAC;MACA;IACA,CAJA;IAKA;IACAC;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA;EArBA;AApBA","names":["data","form","username","password","ruleLogin","required","message","trigger","min","max","methods","reset","login"],"sourceRoot":"src/views","sources":["bank_login.vue"],"sourcesContent":["<template>\n  <div class=\"login_container\">\n    <!-- 外框 -->\n    <div class=\"login_box\">\n      <!-- 头像 -->\n     <div class=\"logo\">\n        <!--<img src=\"../assets/logo.png\"\n             alt=\"\">-->\n            <h1>用户登陆</h1>\n      </div>\n      <!-- 表单 -->\n      <el-form ref=\"formRef\"\n               :model=\"form\"\n               label-width=\"0px\"\n               class=\"sign\"\n               :rules=\"ruleLogin\">\n        <!-- 登录名 -->\n        <el-form-item prop=\"username\">\n          <el-input prefix-icon=\"iconfont icon-user\"\n                    v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input prefix-icon=\"iconfont icon-3702mima\"\n                    show-password\n                    v-model=\"form.password\"\n                    @keyup.enter.native=\"login\"></el-input>\n        </el-form-item>\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\"\n                     @click=\"login\">登录</el-button>\n          <el-button type=\"info\"\n                     @click=\"reset\">重置</el-button>\n        </el-form-item>\n\n      </el-form>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\n export default {\n  data () {\n    return {\n      form: {\n        username: '',\n        password: '',\n      },\n      // 校验数据是否合法\n      ruleLogin: {\n        username: [\n          { required: true, message: '请输入登录名称', trigger: 'blur' },\n          { min: 2, max: 6, message: '长度在 2 到 10 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 重置方法\n    reset: function () {\n       this.$refs.formRef.resetFields()\n    },\n    // 表单提交预验证\n    login: function () {\n      /*\n      this.$refs.formRef.validate(async val => {\n        // 预验证失败阻止程序向下执行\n        if (!val) return;\n        // 预验证通过发送请求\n        let { data: res } = await this.$http.post('login', this.form);\n        if (res.meta.status !== 200) return this.$message.error(\"登录失败\");\n        this.$message.success(\"登录成功\");\n        // 保存登录成功的token\n        window.sessionStorage.setItem(\"token\", res.data.token);\n        // 跳转到home页面\n        this.$router.push(\"/home\")\n      })\n    },*/\n  }\n}\n }\n</script>\n\n<style lang=\"less\" scoped>\n\n.login_container {\n  height: 100%;\n  background-color: #d2d9e0;\n}\n\n.login_box {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: 300px;\n  width: 450px;\n  border-radius: 14px;\n  background-color: #fff;\n\n  .logo {\n    position: absolute;\n    left: 50%;\n    top:10%;\n    transform: translate(-50%, -50%);\n    \n  }\n}\n  \n  .sign {\n    margin-top: 90px;\n    padding: 0 20px;\n  }\n    .btns {\n      display: flex;\n      justify-content: flex-end;\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}